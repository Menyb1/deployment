#!/bin/sh

usage () {
    echo "Usage: $(basename "$0") <APP> <ENV> <VERSION_LABEL>"
    echo
    echo "Deploy an application at a specified version to the named"
    echo "environment."
    echo
    echo "N.B. The application version is assumed to have already been created"
    echo "in Elastic Beanstalk using, for example, the eb-release script."
    echo
    echo "  APP              the name of the application, e.g. 'bouncer'"
    echo "  ENV              the environment: typically 'qa' or 'prod'"
    echo "  VERSION_LABEL    the application version"
}

abort () {
    echo "Error:" "$@" >&2
    echo "Aborting!" >&2
    exit 1
}

status () {
    echo "--->" "$@" >&2
}

if [ "$#" -ne 3 ]; then
    usage >&2
    exit 1
fi

set -eu

PATH="$(dirname "$0"):${PATH}"

APP=$1
ENV=$2
VERSION_LABEL=$3

status "deploying application"

# If the environment exists we can simply update it with the new version label
# and the deployment will proceed on its own.
#
# If the environment does not yet exist, create it using eb-env-create.
if eb-env-exists "$APP" "$ENV"; then
    aws elasticbeanstalk update-environment \
        --application-name "$APP" \
        --environment-name "${APP}-${ENV}" \
        --version-label "$VERSION_LABEL"
else
    eb-env-create "$APP" "$ENV" "$VERSION_LABEL"
fi
